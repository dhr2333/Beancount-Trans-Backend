# 测试专用Docker镜像 - 兼容传统 Docker 构建
# 不使用 BuildKit 特性，确保在所有环境中都能构建

FROM python:3.12 AS builder

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_DEFAULT_TIMEOUT=6000 \
    PIP_RETRIES=5

WORKDIR /build

# 完整镜像已包含所需依赖，无需额外安装

# 升级 pip 和安装基础工具
RUN pip install -i https://repo.huaweicloud.com/repository/pypi/simple/ --upgrade pip wheel

# 安装测试专用依赖（完整版，排除大型 ML 包）
COPY requirements-test-full.txt .
RUN pip install -i https://repo.huaweicloud.com/repository/pypi/simple/ --user -r requirements-test-full.txt

# 测试阶段：运行时镜像
FROM python:3.12

LABEL maintainer="daihaorui <Dai_Haorui@163.com>"
LABEL purpose="test"

ENV PYTHONUNBUFFERED=1 \
    PATH="/root/.local/bin:${PATH}" \
    DJANGO_SETTINGS_MODULE="project.settings.test"

WORKDIR /app

# 完整镜像已包含所需依赖，无需额外安装

# 从 builder 阶段复制 Python 包
COPY --from=builder /root/.local /root/.local

# 复制配置文件（不常变更的文件放前面以利用缓存）
COPY pyproject.toml .coveragerc ./
COPY bin ./bin
COPY conf ./conf

# 创建必要的目录并设置权限
RUN mkdir -p /app/reports /app/logs && \
    chmod +x /app/bin/*.sh 2>/dev/null || true

# 复制模板文件
COPY templates ./templates

# 最后复制经常变更的代码文件（最大化缓存利用率）
COPY manage.py ./
COPY project ./project

# 默认命令：运行 pytest（参数在 pyproject.toml 中配置）
CMD ["pytest"]
